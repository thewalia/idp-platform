image:
  repository: python
  tag: "3.11-slim"
  pullPolicy: IfNotPresent

nameOverride: "${{values.name}}"
fullnameOverride: "${{values.name}}"

replicaCount: 3

service:
  type: ClusterIP
  port: ${{values.port}}
  targetPort: ${{values.port}}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: ${{values.name}}-api.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

serviceAccount:
  create: true
  annotations: {}
  name: ""

# Security context - more restrictive for API services
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Pod Security Standards
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  automountServiceAccountToken: false

# Monitoring - enhanced for API services
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 15s
    path: /metrics
  alerts:
    enabled: true
    errorRateThreshold: 5
    latencyThreshold: 500

# External Secrets
externalSecrets:
  enabled: false
  secretStore: vault-secret-store
  vaultPath: "demo-apps"
  configSecretName: "${{values.name}}-config"
  credsSecretName: "${{values.name}}-creds"

# API-specific config
api:
  port: ${{values.port}}
  environment: production
  logLevel: info
  rateLimit:
    enabled: true
    requests: 100
    windowMs: 60000
  database:
    enabled: true
    type: postgresql
  features:
    - rest-api
    - health-checks
    - metrics
    - rate-limiting
    - database-integration
