---
apiVersion: v1
kind: Service
metadata:
  name: backstage-postgresql
  namespace: backstage
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: backstage-postgresql
    app.kubernetes.io/part-of: idp-platform
spec:
  type: ClusterIP
  ports:
    - name: postgresql
      port: 5432
      targetPort: postgresql
      protocol: TCP
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: backstage-postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backstage-postgresql-data
  namespace: backstage
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: backstage-postgresql
    app.kubernetes.io/part-of: idp-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage-postgresql
  namespace: backstage
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: backstage-postgresql
    app.kubernetes.io/part-of: idp-platform
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: backstage-postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: backstage-postgresql
        app.kubernetes.io/part-of: idp-platform
    spec:
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: backstage
      automountServiceAccountToken: false
      containers:
        - name: postgresql
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: backstage-db-secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backstage-db-secrets
                  key: postgres-password
            - name: POSTGRES_DB
              value: backstage
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgresql-data
            - name: tmp
              mountPath: /tmp
            - name: run
              mountPath: /var/run/postgresql
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: backstage-postgresql-data
        - name: tmp
          emptyDir: {}
        - name: run
          emptyDir: {}
