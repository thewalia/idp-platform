apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: basic-service-template
  title: Basic Service
  description: Create a basic containerized service with REST API
  tags:
    - recommended
    - service
    - api
    - nodejs
  annotations:
    backstage.io/managed-by-location: url:https://github.com/theWalia/idp-platform/blob/main/infrastructure/backstage/scaffolder-templates/service-template/template.yaml
spec:
  owner: platform-team
  type: service
  parameters:
    - title: Service Information
      required:
        - name
        - description
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the service
          pattern: '^[a-z0-9-]+$'
          ui:autofocus: true
          ui:help: 'Use lowercase letters, numbers, and hyphens only'
        description:
          title: Description
          type: string
          description: Brief description of the service
        owner:
          title: Owner
          type: string
          description: Owner of the service
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User
        system:
          title: System
          type: string
          description: System this service belongs to
          default: demo-applications
          enum:
            - demo-applications
            - idp-platform
    - title: Runtime Configuration
      properties:
        port:
          title: Port
          type: integer
          description: Port for the service to listen on
          default: 3000
        replicas:
          title: Replicas
          type: integer
          description: Number of replicas to run
          default: 1
          minimum: 1
          maximum: 5
        resources:
          title: Resource Requirements
          type: object
          properties:
            cpu:
              title: CPU Request
              type: string
              default: "100m"
            memory:
              title: Memory Request
              type: string
              default: "128Mi"
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          port: ${{ parameters.port }}
          replicas: ${{ parameters.replicas }}
          resources: ${{ parameters.resources }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish to GitHub
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        title: "Create new service: ${{ parameters.name }}"
        branchName: create-${{ parameters.name }}
        description: |
          # New service: ${{ parameters.name }}
          
          ${{ parameters.description }}
          
          This PR creates:
          - Helm chart for the service
          - ArgoCD application definition
          - Service catalog entry
          
          Created by Backstage scaffolder.
        targetPath: .

    - id: register
      name: Register in Software Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/applications/${{ parameters.name }}/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
